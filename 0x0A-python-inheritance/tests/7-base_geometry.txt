# Import the BaseGeometry class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Check documentation
>>> print((len(BaseGeometry.__doc__) > 1))
True
>>> print((len(BaseGeometry.area.__doc__) > 1))
True
>>> print((len(BaseGeometry.integer_validator.__doc__) > 1))
True
>>> print((len(__import__('7-base_geometry').__doc__) > 1))
True

# Create an instance of BaseGeometry
>>> bg = BaseGeometry()

# Test area method
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Test integer_validator method
>>> bg.integer_validator("side_length", "five")
Traceback (most recent call last):
    ...
TypeError: side_length must be an integer

>>> bg.integer_validator("side_length", None)
Traceback (most recent call last):
    ...
TypeError: side_length must be an integer

>>> bg.integer_validator("side_length", 0)
Traceback (most recent call last):
    ...
ValueError: side_length must be greater than 0

>>> bg.integer_validator("side_length", -10)
Traceback (most recent call last):
    ...
ValueError: side_length must be greater than 0

# Positive cases for integer_validator
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("width", 89234312342443)
>>> bg.integer_validator("width", (89))

# Negative cases for integer_validator
>>> bg.integer_validator("width", [89])
Traceback (most recent call last):
    ...
TypeError: width must be an integer

